<h5>Change Password</h5>

<Modal @ref="modal" Title="Password">
    <Body>@Result</Body>
</Modal>

<EditForm Model="passwordViewModel" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    
    <div class="mb-3 row">
        <label class="col-sm-4 col-form-label">Old password</label>
        <div class="col-sm-8">
            <InputText type="password" @bind-Value="passwordViewModel.OldPassword" class="form-control"/>
        </div>
    </div>
    
    <div class="mb-3 row">
        <label class="col-sm-4 col-form-label">New password</label>
        <div class="col-sm-8">
            <InputText type="password" @bind-Value="passwordViewModel.NewPassword" class="form-control"/>
        </div>
    </div>
    
    <div class="mb-3 row">
        <label class="col-sm-4 col-form-label">New password (repeat)</label>
        <div class="col-sm-8">
            <InputText type="password" @bind-Value="passwordViewModel.NewPasswordRepeat" class="form-control"/>
        </div>
    </div>
    
    <div class="row">
        <div class="d-flex justify-content-end col">
            <button class="w-50 btn btn-primary" type="submit">Change password</button>
        </div>
    </div>
</EditForm>

@code {
    [Inject]
    public ServerProxy? ServerProxy { get; set; }
    
    private string Result { get; set; }

    private Modal modal = new();
    
    private readonly UpdateUserPasswordViewModel passwordViewModel = new();

    private async Task ChangePassword()
    {
        var result = await ServerProxy!.ChangeUserPasswordAsync(passwordViewModel.GetRequest());
        Result = !result.IsSuccess ? result.ErrorDescription! : "Password successfully changed";
        
        modal.Open();
    }
}