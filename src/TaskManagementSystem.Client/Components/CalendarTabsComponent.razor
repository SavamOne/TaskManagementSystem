<h3>CalendarTabsComponent</h3>

<div class="row row-cols-1 row-cols-md-4 g-4">
    @if (Calendars.Any())
    {
        foreach (CalendarInfo calendar in Calendars)
        {
            string path = Path.Combine("calendar", calendar.Id.ToString());
            string style = $"background:{StringHelper.GetHexColorForText(calendar.Name)}";
            <div class="col p-4">
                <NavLink href="@path" class="card text-white mb-3 h-100 text-decoration-none" style="@style">
                    <div class="card-header">
                        <h5 class="card-title mt-2 mb-2">@calendar.Name</h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@calendar.Description</p>
                    </div>
                </NavLink>
            </div>
        }
    }
    else
    {
        <LoaderComponent/>
    }
</div>

@code {
    [Inject]
    public ServerProxy? ServerProxy { get; set; }
    
    [Inject]
    public IToastService? ToastService { get; set; }

    public IEnumerable<CalendarInfo> Calendars { get; set; } = Enumerable.Empty<CalendarInfo>();

    protected override async Task OnInitializedAsync()
    {
        await RefreshCalendarsStateAsync();
    }

    public async Task RefreshCalendarsStateAsync()
    {
        var result = await ServerProxy!.GetUserCalendars();

        if (!result.IsSuccess)
        {
            ToastService!.AddSystemErrorToast(result.ErrorDescription!);
            return;
        }

        Calendars = result.Value!;
        StateHasChanged();
    }
}